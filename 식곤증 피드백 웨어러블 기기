const int LED_PIN = LED_BUILTIN;
const int BTN_NORMAL = 2;  
const int BTN_DROWSY = 3;  

bool drowsyMode = false;

bool wasPressed(int pin) {
  static unsigned long lastPressTime[10] = {0};
  if (digitalRead(pin) == LOW) {
    if (millis() - lastPressTime[pin] > 200) {
      lastPressTime[pin] = millis();
      while (digitalRead(pin) == LOW);
      return true;
    }
  }
  return false;
}

void setup() {
  Serial.begin(9600);
  pinMode(LED_PIN, OUTPUT);
  pinMode(BTN_NORMAL, INPUT_PULLUP); 
  pinMode(BTN_DROWSY, INPUT_PULLUP); 
  randomSeed(analogRead(0));
}

void loop() {
  // 버튼 이벤트
  if (wasPressed(BTN_NORMAL)) {
    drowsyMode = false;
    Serial.println(">> 정상 모드 전환");
  }
  if (wasPressed(BTN_DROWSY)) {
    drowsyMode = true;
    Serial.println(">> 식곤증 모드 전환");
  }

  // 센서 값 생성
  float hr, spo2, tempC;
  if (drowsyMode) {
    hr = random(50, 60) + random(-2, 3) * 0.5;
    spo2 = random(90, 95) + random(-1, 2) * 0.5;
    tempC = random(373, 379) / 10.0;
  } else {
    hr = random(65, 90) + random(-2, 3) * 0.5;
    spo2 = random(96, 100) + random(-1, 2) * 0.5;
    tempC = random(360, 372) / 10.0;
  }

  // 출력
  Serial.print("[모드] ");
  Serial.print(drowsyMode ? "식곤증" : "정상");
  Serial.print(" | HR: "); Serial.print(hr);
  Serial.print(" bpm | SpO₂: "); Serial.print(spo2);
  Serial.print(" % | Temp: "); Serial.print(tempC);
  Serial.println(" °C");

  // 식곤증 인식 조건 (예시: HR 50~60, SpO₂ 90~95, Temp 37.3~37.9)
  if (hr >= 50 && hr <= 60 &&
      spo2 >= 90 && spo2 <= 95 &&
      tempC >= 37.3 && tempC <= 37.9) {
    
    Serial.println("⚠ 식곤증 인식 — 섭취량을 조절하세요");
    delay(500); // 인식 후 잠시 대기
    digitalWrite(LED_PIN, HIGH); // LED 켜기
  } else {
    digitalWrite(LED_PIN, LOW); // 조건 안맞으면 LED 꺼짐
  }

  delay(500);
}

 library manager(추가 필수)
-SparkFun MAX3010x Pulse and Proximity Sensor Library
-DallasTemperature
-OneWire
-Arduino Low Power
